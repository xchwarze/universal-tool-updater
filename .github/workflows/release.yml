name: Create Release
on:
  push:
    branches: [master]
  pull_request:

jobs:      
  generate-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: 'x86'

      - name: Install dependencies
        working-directory: ./src
        run: pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build the .exe application
        working-directory: ./src
        run: pyinstaller --onefile UpdateManager.py --icon=../assets/appicon.ico

      - name: Test build
        run: |
          cp src/dist/UpdateManager.exe updater.exe
          ./updater.exe --disable-self-update --disable-progress-bar --disable-install-check --disable-repack --force

      - name: Upload the built .exe as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-x86
          path: ./src/dist
        
  create-release:
    needs: generate-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Release Name
        id: prep
        shell: bash
        run: |
          DATE=$(date +'%Y%m%d')  # Format: YYYYMMDD
          echo "::set-output name=RELEASE_NAME::v$DATE"

      - name: Create Tag
        run: |
          git config user.name "Sync-Bot"
          git config user.email "xchwarze@gmail.com"
          git tag ${{ steps.prep.outputs.RELEASE_NAME }}
          git push origin ${{ steps.prep.outputs.RELEASE_NAME }}

      - name: Generate Release Notes
        id: generate_notes
        shell: bash
        run: |
          NEW_TAG=$(git describe --tags --abbrev=0 HEAD)
          TAGS=( $(git tag --sort=-creatordate) )
          CURRENT_INDEX=$(printf "%s\n" "${TAGS[@]}" | grep -n -m 1 "^$NEW_TAG$" | cut -d: -f1)
          PREVIOUS_INDEX=$((CURRENT_INDEX - 1))
          if [ $PREVIOUS_INDEX -gt 0 ]; then
            PREVIOUS_TAG=${TAGS[$PREVIOUS_INDEX-1]} # Ajustar el Ã­ndice para la base-0 de arrays en Bash
            echo "::set-output name=notes::https://github.com/xchwarze/universal-tool-updater/compare/${PREVIOUS_TAG}...${NEW_TAG}"
          else
            echo "::set-output name=notes::This is the first tag."
          fi

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          path: ./builds

      - name: Prepare the release directory
        run: |
          mkdir -p release/extras
          cp -r extras/* release/extras/
          cp builds/build-x86/UpdateManager.exe release/updater.exe
          cp unrar.exe release/
          cp tools.ini release/
          cp *.md release/
          cp *.txt release/

      - name: Compress the release directory
        run: zip -r release-x86.zip release/

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: release-x86.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.prep.outputs.RELEASE_NAME }}
          name: ${{ steps.prep.outputs.RELEASE_NAME }}
          body: "Changelog URL: ${{ steps.generate_notes.outputs.notes }}"
          allowUpdates: true
